CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(secure-storage C)

INCLUDE(FindPkgConfig)

SET(VERSION_MAJOR 1)
SET(VERSION ${VERSION_MAJOR}.0.0)

IF(CMAKE_BUILD_TYPE MATCHES "DEBUG")
ADD_DEFINITIONS("-DTIZEN_DEBUG_ENABLE")
ADD_DEFINITIONS("-DBUILD_TYPE_DEBUG")
#ADD_DEFINITIONS("-DPRINT_DEBUG_DATA") # for printing raw datas
ENDIF(CMAKE_BUILD_TYPE MATCHES "DEBUG")

#ADD_DEFINITIONS("-DUSE_KEY_FILE")      # for private key - use key file
#ADD_DEFINITIONS("-DSMACK_GROUP_ID")    # for group id sharing with smack label

#ADD_DEFINITIONS("-Werror")
#ADD_DEFINITIONS("-Wall")
#ADD_DEFINITIONS("-Wextra")

SET(TARGET_SS_SERVER ss-server)
SET(TARGET_SS_CLIENT ss-client)
SET(TARGET_SS_CLIENT_TEST ss-client-tests-ss-manager)

CONFIGURE_FILE(secure-storage.pc.in secure-storage.pc @ONLY)

# install interfaces
INSTALL(FILES ${PROJECT_SOURCE_DIR}/secure-storage.pc DESTINATION lib/pkgconfig)
INSTALL(FILES ${PROJECT_SOURCE_DIR}/include/ss_manager.h DESTINATION include)

ADD_SUBDIRECTORY(src/client)
ADD_SUBDIRECTORY(src/server)
ADD_SUBDIRECTORY(res)
ADD_SUBDIRECTORY(systemd)

IF (DEFINED SECURE_STORAGE_BUILD_TEST)
ADD_SUBDIRECTORY(testcases)
ENDIF (DEFINED SECURE_STORAGE_BUILD_TEST)
